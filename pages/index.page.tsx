import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import BodySingle from "dh-marvel/components/layouts/body/single/body-single";
import { getComics } from 'dh-marvel/services/marvel/marvel.service';
import ComicCard from 'dh-marvel/components/comicCard/ComicCard.component';
import { IData, } from 'dh-marvel/interface/comic';
import LayoutGeneral from 'dh-marvel/components/layouts/layout-general';
import { Pagination, Box } from '@mui/material';
import { useState } from "react"
import Grid from '@mui/material/Unstable_Grid2';
import { useRouter } from 'next/router';

interface Props {
    comics?: IData
}

const Index: NextPage<Props> = ({ comics }) => {


    //Hola profe muchas gracias por todo,
    //lo que me falto fue el tema de que funcione bien el post
    // por lo tanto la pagina de confirmacion de compra "no esta" 
    //el coverge esta al 46,
    

    const router = useRouter()

    const [currentPage, setCurrentPage] = useState<number>(0)
    const totalPages = comics?.total && Math.floor(comics?.total / 12);

    const handleChange = (event: React.ChangeEvent<unknown>, page: number) => {
        setCurrentPage(page);
        if (page !== 1) { router.push(`/?page=${page}`) }
        if (page === 1) { router.push(`/`) }
    };


    return (
        <LayoutGeneral>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <BodySingle title={"Marvel Api Project"}>

                <Grid alignItems="stretch" columnSpacing={{ xs: 1, sm: 2, md: 3 }} container spacing={2}
                >
                    {comics?.results?.map((result) => (
                        <Grid xs={12} sm={6} md={4} key={result.id} >
                            <ComicCard result={result} />
                        </Grid>
                    ))}

                </Grid>

                <Pagination onChange={handleChange} count={totalPages} page={currentPage} />
            </BodySingle>
        </LayoutGeneral>
    )
}

export const getServerSideProps: GetServerSideProps = async ({ query, res }) => {
    // esta raro lo se, pero funca 
    const pageSize = 12
    const page = Number(query.page ?? 0);

    const offset = (page * pageSize) - 12 === -12 ? 0 : (page * pageSize) - 12;
    const comics = await getComics(offset, pageSize);

    res.setHeader("Cache-Control", "public, s-maxage=10, stale-while-revalidate");

    return {
        props: {
            comics: comics.data,

        }
    }
}


export default Index
