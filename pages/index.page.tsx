import type { GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import BodySingle from "dh-marvel/components/layouts/body/single/body-single";
import { getComics } from 'dh-marvel/services/marvel/marvel.service';
import ComicCard from 'dh-marvel/components/comicCard/ComicCard.component';
import { Comics, } from 'dh-marvel/interface/comic';
import LayoutGeneral from 'dh-marvel/components/layouts/layout-general';
import { Pagination, Box } from '@mui/material';
import { useState } from "react"
import Grid from '@mui/material/Unstable_Grid2';

interface Props {
    comics?: Comics
}

const Index: NextPage<Props> = ({ comics }) => {

    const [page, setPage] = useState<number>(1)
    const totalPages = comics?.total && Math.floor(comics?.total / 12)!;

    const handleChange = (event: React.ChangeEvent<unknown>, page: number) => {
        setPage(page);
    };



    return (
        <LayoutGeneral>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <BodySingle title={"Marvel Api Project"}>

                <Grid alignItems="stretch" columnSpacing={{ xs: 1, sm: 2, md: 3 }} container spacing={2}
                >
                    {comics?.results?.map((result) => (
                        <Grid xs={12} sm={6} md={4} key={result.id} >
                            <ComicCard result={result} page={page} />
                        </Grid>
                    ))}

                </Grid>

                <Pagination onChange={handleChange} count={totalPages} page={page} />
            </BodySingle>
        </LayoutGeneral>
    )
}

export const getStaticProps: GetStaticProps = async () => {
    
    const comics = await getComics(undefined, 12)
    return {
        props: {
            comics: comics.data
        }
    }
}


export default Index
